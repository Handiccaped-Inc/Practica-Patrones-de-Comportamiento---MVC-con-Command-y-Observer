/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.unicauca.openmarket.presentation;

import co.edu.unicauca.openmarket.domain.Category;
import co.edu.unicauca.openmarket.domain.Product;
import co.edu.unicauca.openmarket.domain.service.ProductService;
import co.edu.unicauca.openmarket.infra.Messages;
import co.edu.unicauca.openmarket.presentation.commands.OMAddCategoryCommand;
import co.edu.unicauca.openmarket.presentation.commands.OMInvoker;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import reloj.frameworkobsobs.Observador;

/**
 *
 * @author Joe de la Poer
 */
public class GUIPostCategoryCreation extends javax.swing.JFrame implements Observador {

    OMAddCategoryCommand addCategoryCommand;
    ProductService productService;
    OMInvoker ominvoker;

    /**
     * Creates new form GUIPostSaveCategory
     */
    public GUIPostCategoryCreation(OMAddCategoryCommand addCategoryCommand, ProductService productService, OMInvoker ominvoker) {
        initComponents();
        this.addCategoryCommand = addCategoryCommand;
        this.productService = productService;
        this.lblNombreCategoria.setText(addCategoryCommand.getAddedCategory().getName() + " con Id: " + addCategoryCommand.getAddedCategory().getCategoryId());
        this.ominvoker = ominvoker;
        this.btnDeshacer.setVisible(ominvoker.hasMoreCommands());
        fillTable(productService.findAllProducts());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        pnlPrincipal = new javax.swing.JPanel();
        scrlpnlProducts = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        lblAllProducts = new javax.swing.JLabel();
        lblNombreCategoria = new javax.swing.JLabel();
        pnlOptions = new javax.swing.JPanel();
        btnGuardarCambios = new javax.swing.JButton();
        btnDeshacer = new javax.swing.JButton();
        btnFindAllProds = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Añadir productos a la categoria");

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Descripcion", "idCategoria"
            }
        ));
        scrlpnlProducts.setViewportView(tblProducts);

        lblAllProducts.setText("Selecciona los productos que desea agregar a la categoria: ");

        lblNombreCategoria.setText("----");

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(scrlpnlProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(40, 40, 40))
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAllProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNombreCategoria)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAllProducts)
                    .addComponent(lblNombreCategoria))
                .addGap(18, 18, 18)
                .addComponent(scrlpnlProducts, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pnlOptions.setLayout(new java.awt.GridBagLayout());

        btnGuardarCambios.setText("Guardar Cambios");
        btnGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosActionPerformed(evt);
            }
        });
        pnlOptions.add(btnGuardarCambios, new java.awt.GridBagConstraints());

        btnDeshacer.setText("Deshacer");
        btnDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshacerActionPerformed(evt);
            }
        });
        pnlOptions.add(btnDeshacer, new java.awt.GridBagConstraints());

        btnFindAllProds.setText("Buscar todos los productos");
        btnFindAllProds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindAllProdsActionPerformed(evt);
            }
        });
        pnlOptions.add(btnFindAllProds, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlOptions, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindAllProdsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindAllProdsActionPerformed
        this.fillTable(productService.findAllProducts());
        tblProducts.setRowSelectionAllowed(true);

    }//GEN-LAST:event_btnFindAllProdsActionPerformed

    private void btnGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosActionPerformed
        //Obtener los indices seleccionados
        
        ArrayList<Integer> indexes = new ArrayList<>();
        int[] selectedIndexes = this.tblProducts.getSelectedRows();
        
        for (int index : selectedIndexes) {
            indexes.add(index);
        }
        //Obtener todos los productos (Estan indexados igual a la tabla)
        List<Product> allProducts = productService.findAllProducts();
        
        //Filtrar los que estan seleccionados
        ArrayList<Product> productsToCategorize = new ArrayList<>();
        for (int i = 0; i < allProducts.size(); i++) {
            if(indexes.contains(i)){
                productsToCategorize.add(allProducts.get(i));
            }
        }
        //Añadirlos al comando
        addCategoryCommand.setProductsToAdd(productsToCategorize);
        ominvoker.execute();
        if (addCategoryCommand.getResult()) {
            Messages.showMessageDialog("Se grabó con éxito", "Atención");
        } else {
            Messages.showMessageDialog("Error al grabar, lo siento mucho", "Atención");
        }
        this.btnDeshacer.setVisible(ominvoker.hasMoreCommands());

    }//GEN-LAST:event_btnGuardarCambiosActionPerformed

    private void btnDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshacerActionPerformed
        ominvoker.unexecute();
        this.btnDeshacer.setVisible(ominvoker.hasMoreCommands());
    }//GEN-LAST:event_btnDeshacerActionPerformed
    private void fillTable(List<Product> listProducts) {
        this.tblProducts.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Nombre", "Descripcion", "idCategoria"
                }
        ));
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        Object rowData[] = new Object[4];//No columnas
        for (int i = 0; i < listProducts.size(); i++) {
            rowData[0] = listProducts.get(i).getProductId();
            rowData[1] = listProducts.get(i).getName();
            rowData[2] = listProducts.get(i).getDescription();
            Category categoria = listProducts.get(i).getCategory();
            rowData[3] = categoria == null ? "Ninguna" : categoria.getCategoryId();
            model.addRow(rowData);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeshacer;
    private javax.swing.JButton btnFindAllProds;
    private javax.swing.JButton btnGuardarCambios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblAllProducts;
    private javax.swing.JLabel lblNombreCategoria;
    private javax.swing.JPanel pnlOptions;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JScrollPane scrlpnlProducts;
    private javax.swing.JTable tblProducts;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        fillTable(productService.findProductByCategory(addCategoryCommand.getAddedCategory().getCategoryId()));
        tblProducts.setRowSelectionAllowed(false);
    }
}
